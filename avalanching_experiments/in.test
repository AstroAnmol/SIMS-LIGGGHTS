### Avalanching experiment in uniform magnetic field


### Initialization
# Preliminaries
units           si
atom_style      hybrid granular dipole
atom_modify     sort 10000 0

# periodic y boundaries, fixed x and z boundaries
boundary        f f f

#LIGGGHTS-Public shouuld produce the same answers for any newton flag setting, besides round off
newton          off
soft_particles  yes
communicate     single vel yes

# the product of the processors must equal P, the number of processors used when running the file: mpirun -np 4 ...
processors      4 2 5

# Dimensions of the box
variable        dom_length equal 0.280 # 280 mm
variable        dom_width  equal 0.085 # 085 mm
variable        dom_height equal 0.130 # 130 mm
variable        mid_wall   equal 0.130 # 130 mm

# Declare domain
region          domain block 0 ${dom_length} 0 ${dom_width} 0 ${dom_height} units box
create_box      2 domain

# Neighbor skin style - atom pairs within a neighbor cutoff distance = force cutoff + skin distance, styele = bin
variable        skin_dist equal 0.005 #meters
neighbor        ${skin_dist} bin
# neigh_modify delay 0, this is the default, rebuild neighbor list every timestep
neigh_modify    delay 0

### Setup
# Material and interaction properties required
variable        youngsM equal 253e6 # N/m^2
variable        coeff_rest equal 0.2
variable        friction_coeff equal 0.3
variable        poissons equal 0.325
variable        rolling_coeff equal 0.4
variable        rolling_damp equal 0.4
variable        rolling_stiff equal 10
variable        cohesion_energy equal 10 # J/m^3
variable        magnetic_susc equal 1

fix             m1 all property/global youngsModulus peratomtype ${youngsM} ${youngsM}
fix             m2 all property/global poissonsRatio peratomtype ${poissons} ${poissons}
fix             m3 all property/global coefficientRestitution peratomtypepair 2 ${coeff_rest} ${coeff_rest} ${coeff_rest} ${coeff_rest}
fix             m4 all property/global coefficientFriction peratomtypepair 2 ${friction_coeff} ${friction_coeff} ${friction_coeff} ${friction_coeff}
fix             m5 all property/global coefficientRollingFriction peratomtypepair  2 ${rolling_coeff} ${rolling_coeff} ${rolling_coeff} ${rolling_coeff}
fix             m6 all property/global coefficientRollingViscousDamping peratomtypepair  2 ${rolling_damp} ${rolling_damp} ${rolling_damp} ${rolling_damp}
fix             m7 all property/global coeffRollingStiffness scalar ${rolling_stiff}
fix             m8 all property/global cohesionEnergyDensity peratomtypepair 2 ${cohesion_energy} ${rolling_damp} ${rolling_damp} ${rolling_damp}

fix             m9 all property/global magneticSusceptibility peratomtype ${magnetic_susc} ${magnetic_susc}

## box walls - define simulation 	
fix		        wall_z1 all wall/gran model hertz tangential history cohesion sjkr rolling_friction epsd primitive type 2 zplane 0.0        #floor
fix		        wall_z2 all wall/gran model hertz tangential history cohesion sjkr rolling_friction epsd primitive type 2 zplane ${dom_height}
fix             wall_x1 all wall/gran model hertz tangential history cohesion sjkr rolling_friction epsd primitive type 2 xplane 0.0            
fix             wall_x2 all wall/gran model hertz tangential history cohesion sjkr rolling_friction epsd primitive type 2 xplane ${dom_length}
fix             wall_y1 all wall/gran model hertz tangential history cohesion sjkr rolling_friction epsd primitive type 2 yplane 0.0            
fix             wall_y2 all wall/gran model hertz tangential history cohesion sjkr rolling_friction epsd primitive type 2 yplane ${dom_width}

## wall in centre which is removed to simulate mass wasting
fix             wall_center all wall/gran model hertz tangential history cohesion sjkr rolling_friction epsd primitive type 2 xplane ${mid_wall}

## Pair style
pair_style      gran model hertz tangential history cohesion sjkr rolling_friction epsd torsionTorque on
pair_coeff	    * *  # the asterisks set force field coeefficients for all atom types, but then no other args? ASK TOM


## Particle insertion
variable        particle_density equal 8500 # kg/m3
variable        particle_dia equal 0.00635 # 06.35 mm
variable        particle_radius equal ${particle_dia}/2 # mm
variable        number_of_particles equal 3800

# particles and their distribution
fix	            pts1 all particletemplate/sphere 15485863 atom_type 1 density constant ${particle_density} radius constant ${particle_radius} 
fix             pdd1 all particledistribution/discrete 15487517 1 pts1 1.0

# # region and insertion
region          insertion_b block EDGE ${mid_wall} EDGE EDGE EDGE EDGE 
group           prtcls region insertion_b
fix             ins prtcls insert/rate/region seed 123457 distributiontemplate pdd1 nparticles ${number_of_particles} &
                particlerate 1000 insert_every 1000 overlapcheck yes region insertion_b ntry_mc 10000


# region and insertion
group		    nve_group region domain

### Detailed settings
# apply nve integration to all particles that are inserted as single particles
fix		        integr prtcls nve/sphere update dipole

# Gravity
variable        grav_value equal 9.8 #m/s^2
fix             grav all gravity ${grav_value} vector 0.0 0.0 -1.0

# Time step
timestep        .000002 #seconds (2 microsecond)

## Thermo settings
# thermo style custom says what thermo data we want printed at each thermo timestep - timestep, num atoms, kinetic energy, volume
thermo_style 	custom step atoms ke vol
# thermo output every 1000 timesteps
thermo		    1000
# LIGGGHTS will ignore last particles and will not normalize against num atoms
thermo_modify	lost ignore norm no

# Check time step and initialize dump file
fix             ctg all check/timestep/gran 1 0.01 0.01
run             1
unfix           ctg

# Create imaging information
dump            dmp all custom 10000 results/nomag/post_brass_only/dump*.post id type x y z vx vy vz radius fx fy fz mass


# ensure particles are static 
velocity       all set 0. 0. 0.

# Fill the left half
run             3000000 upto    #6.0 sec


# Stop insertion
unfix           ins


# Settle particles
run             500000         #1.0 sec


# Remove the extra particles
region          remove_reg block EDGE ${mid_wall} EDGE EDGE 0.072 EDGE
# group           prtcls_rem region remove_reg
delete_atoms    region remove_reg


# # fix magnetic (H field A/m)
# variable        mag_mag equal 1.25e04 #A/m
# fix	            mag all magnetic    0 0 ${mag_mag}

# Settle particles again
# run             500000         #1.0 sec


# write restart file to be used for falling on particles
write_restart   nomag_restart_filled_brass_only.static

# pull the stopper
unfix           wall_center

run             4000000         #8.0 sec

# run             30000
# undump		    dmp